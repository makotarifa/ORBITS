name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-server:
    name: Test Server
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./server

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Build application
      run: npm run build

    - name: Run unit tests
      run: npm run test -- --coverage --watchAll=false

    - name: Run E2E tests
      run: npm run test:e2e

  test-client:
    name: Test Client
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./client

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Run linter (if available)
      run: npm run lint || echo "No lint script available"

  build-and-test:
    name: Build and Test Complete Application
    runs-on: ubuntu-latest
    needs: [test-server, test-client]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'

    - name: Install root dependencies
      run: npm ci

    - name: Build shared packages
      run: npm run build
      working-directory: ./shared

    - name: Validate docker-compose
      run: docker-compose config

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: success()
      with:
        directory: ./server/coverage
        flags: server
        name: server-coverage
        fail_ci_if_error: false